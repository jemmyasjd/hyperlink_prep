<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">

<head>
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
    <link href="https://unpkg.com/vuetify@1.0.17/dist/vuetify.min.css" type="text/css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons" rel="stylesheet">
    <link rel="shortcut icon" href="<%= globals.LOGO %>">

    <title>
        <%= globals.app_name %> API
    </title>
    <style type="text/css">
        .medium-text {
            font-size: 20px;
            color: white;
        }
    </style>
</head>

<body>
    <BR>
    <BR>

    <div id="main" style="margin:0px auto; text-align:center; position:sticky;">
        <center>
            <table border="0" cellpadding="10" cellspacing="10" width="70%"
                style="background-color: #2c7399;color: #fff;font-weight: bold;">
                <tr>
                    <td><b>Server URL :-</b></td>
                    <td>
                        <%= globals.app_url %>
                    </td>
                    <td>Header Parameters :</td>
                    <td><b>api-key,<br>token,<br>accept-language (en,ar)</td>
                    <!-- <td><br>accept_language: en -> English<br></td> -->
                </tr>
                <tr>
                    <!-- <td colspan="4" align="center"><b>If Device Token not get pass 0 only</b></td> -->
                    <td colspan="4" align="center"><b>In authorization pass access_token</b></td>
                </tr>
            </table>
        </center>

        <br>
        <br>
    </div>
    <div id="app">
        <v-app id="inspire">

            <v-layout justify column>
                <v-flex style="margin:0px auto; padding:0px; text-align:center;" center right sm2 xs2 md2 lg2 xl2>
                    <!-- <img src='<%= globals.base_url_without_api+ globals.logo %>' width="250px" height="250px" style="border:1px solid black"> -->
                    <br>
                    <strong style="font-size:24px;">
                        <%= globals.app_name %> API LIST
                    </strong>
                    <br>
                    <br>
                </v-flex>
                <v-flex style="margin:0px auto; padding:0px;" center right sm2 xs2 md2 lg2 xl2>

                    <div id="main" style="margin:0px auto; position:sticky;">
                        <table border="0" cellpadding="10" cellspacing="10" width="140%"
                            style="background-color: rgb(71, 131, 100);color: #fff;font-weight: bold;">
                            <tr>
                                <td><b>Server URL :</b></td>
                                <td>
                                    <%= globals.app_url %>v1/
                                </td>
                            </tr>
                            <tr>
                                <td><b>Header Parameters :</b></td>
                                <td>api-key,authorization,accept-language</td>
                            </tr>
                            <tr>
                                <td><b>api-key :</b></td>
                                <td><b>apikey</b></td>
                            </tr>
                            <tr>
                                <td><b>api_key(encrypted) :-</b></td>
                                <td><b>/fGnNHNxvG84ju32Y1ZdNg==</b></td>
                            </tr>
                            <tr>
                                <td><b>KEY :</b></td>
                                <td><b>xza548sa3vcr641b5ng5nhy9mlo64r6k</b></td>
                            </tr>
                            <tr>
                                <td><b>IV :</b></td>
                                <td><b>
                                        <%= globals.encryptionIV %>
                                    </b></td>
                            </tr>
                            <!-- <tr>
                                <td colspan="2" align="center"><img src='<%= globals.base_url_without_api+ globals.arrow_image %>' width="40px"> &nbsp;&nbsp;
                                    <b>If Device Token not get pass 0 only</b></td>
                            </tr> -->
                        </table>
                        <br>
                        <br>
                    </div>
                </v-flex>
                <v-flex style="margin:0px auto;" center right sm2 xs2 md2 lg2 xl2>
                    <!-- <a target="_blank" href='<%= globals.port_base_url %>/v1/api_document/user_list'>
                        <v-btn color="blue-grey" class="white--text">
                            User LIST
                            <v-icon right dark>people</v-icon>
                        </v-btn>
                    </a> -->
                    <!-- 	<a target="_blank" href='<%= globals.port_base_url %>v1/Api_document/tutor_list'>
						<v-btn color="blue-grey" class="white--text">
							Tutor LIST
							<v-icon right dark>people</v-icon>
						</v-btn>
					</a> -->
                    <a href=''>
                        <v-btn color="blue-grey" class="white--text">
                            CODE REFERENCE
                            <v-icon right dark>code</v-icon>
                        </v-btn>
                    </a>
                    <a target="_blank" href='http://localhost/enc_dec.php'>
                        <v-btn color="blue-grey" class="white--text">
                            ENCRYPTION URL
                            <v-icon right dark>lock</v-icon>
                        </v-btn>
                    </a>
                    <!-- <a target="_blank" href='https://vuetifyjs.com/en/style/colors'>
						<v-btn color="blue-grey" class="white--text">
							COLOR INFO
							<v-icon right dark>color_lens</v-icon>
						</v-btn>
					</a>
					<a target="_blank" href='https://material.io/tools/icons/?style=baseline'>
						<v-btn color="blue-grey" class="white--text">
							ICON INFO
							<v-icon right dark>bubble_chart</v-icon>
						</v-btn>
					</a> -->
                </v-flex>
                <v-expansion-panel popout>
                    <v-expansion-panel-content v-for="(message, i) in messages" :key="i" hide-actions>
                        <v-layout slot="header" align-center row spacer>
                            <v-flex sm1 xs1 md1 lg1 xl1>
                                <v-avatar slot="activator" size="36px">
                                    <v-icon :color="message.color">{{ message.icon }}</v-icon>
                                </v-avatar>
                            </v-flex>
                            <v-flex sm3 xs3 md3 lg3 xl3>
                                <strong v-html="message.title"></strong>
                                <v-chip v-if="message.meth" :color="`${message.color} lighten-4`" label small
                                    class="ml-0">
                                    {{ message.meth }}
                                </v-chip>
                            </v-flex>
                            <v-flex sm3 xs3 md3 lg3 xl3>
                                <strong v-html="message.name"></strong>
                            </v-flex>
                            <v-flex sm4 xs4 md4 lg4 xl4>
                                <v-flex v-if="message.link" class="grey--text" ellipsis hidden-sm-and-down>
                                    {{ message.link }}
                                </v-flex>
                                <v-flex v-if="message.imp" class="grey--text" ellipsis hidden-sm-and-down>
                                    <p style="color:darkred">SHOW IMPORTANT NOTE INSIDE</p>
                                </v-flex>
                            </v-flex>
                        </v-layout>
                        <v-card dark>
                            <v-container>
                                <v-layout>
                                    <v-flex xs12 align-end flexbox>
                                        <v-alert :value="true" outline color="white" style="padding:5px;">
                                            <v-chip color="teal" text-color="white">
                                                <v-avatar>
                                                    <v-icon>check_circle</v-icon>
                                                </v-avatar> MANDATORY
                                            </v-chip>
                                            {{message.mandatory}}
                                        </v-alert>
                                        <v-alert :value="true" outline color="white" style="padding:5px;">
                                            <v-chip outline color="#F0F4C3">
                                                <v-avatar>
                                                    <v-icon>check_circle</v-icon>
                                                </v-avatar>OPTIONAL
                                            </v-chip>
                                            <span>{{ message.optional }}
                                        </v-alert>
                                        <v-alert v-if="message.link" :value="true" outline color="white"
                                            style="padding:5px;">
                                            <v-chip color="light-green darken-2" text-color="white">
                                                <v-avatar>
                                                    <v-icon>explore</v-icon>
                                                </v-avatar> LINK
                                            </v-chip>
                                            <span>{{ message.link }}
                                        </v-alert>
                                        <v-alert v-if="message.imp" :value="true" outline color="white"
                                            style="padding:5px;">
                                            <v-chip color="red darken-2" text-color="white">
                                                <v-avatar>
                                                    <v-icon>flight_land</v-icon>
                                                </v-avatar> IMPORTANT
                                            </v-chip>
                                            <p v-html="message.imp"></p>
                                        </v-alert>
                                        <v-alert v-if="message.exp" :value="true" outline color="white"
                                            style="padding:5px;">
                                            <v-chip color="blue darken-2" text-color="white">
                                                <v-avatar>
                                                    <v-icon></v-icon>
                                                </v-avatar> EXAMPLE
                                            </v-chip>
                                            <p v-html="message.exp"></p>
                                        </v-alert>
                                        <v-alert v-if="message.notes" :value="true" outline color="white"
                                            style="padding:5px;">
                                            <v-chip color="blue lighten-1" text-color="white">
                                                <v-avatar>
                                                    <v-icon>bookmark</v-icon>
                                                </v-avatar> NOTES
                                            </v-chip>
                                            <span>{{ message.notes }}
                                        </v-alert>
                                        <v-layout style="margin-top:-4px">
                                            <v-flex xs6 align-end flexbox>
                                                <v-alert :value="true" outline color="yellow" icon="priority_high"
                                                    style="padding:5px;">
                                                    <span class="grey--text">HEADER : {{ message.is_header }}, PUSH :
                                                        {{ message.is_push }}</span>
                                                    <br>
                                                    <span>HEADER : {{ message.header }}</span>
                                                </v-alert>
                                            </v-flex>
                                            <v-flex xs6 align-end flexbox>
                                                <v-alert style="margin-left:4px; padding:5px;" :value="true" outline
                                                    color="yellow" icon="priority_high">
                                                    STATUS :
                                                    <span v-html="message.status"></span>
                                                </v-alert>
                                            </v-flex>
                                        </v-layout>
                                    </v-flex>
                                </v-layout>
                            </v-container>
                            <v-card-actions>
                            </v-card-actions>
                        </v-card>
                    </v-expansion-panel-content>
                </v-expansion-panel>
            </v-layout>
        </v-app>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://unpkg.com/vuetify@1.0.17/dist/vuetify.min.js"></script>
    <script src="https://unpkg.com/babel-polyfill/dist/polyfill.min.js"></script>

    <script>
        //console.log('<%= globals.base_url %>enc_dec.php');

        new Vue({
            el: '#app',
            data: () => ({
                messages: [{
                    "color": "teal",
                    "icon": "person",
                    "title": "1 : USER",
                    "name": "Signup",
                    "meth": "POST",
                    "link": "<%= globals.baseurl %>/user/signup",
                    "mandatory": "login_type('simple', 'facebook', 'google', 'apple'), device_token, device_type, os_version, app_version, latitude, longitude, email (for social & simple login), password (for simple login), mobile (for simple login), social_id (for social login)",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key",
                    "notes": "This API is used for user signup. If login_type is 'simple', mobile, email, and password are required. If login_type is 'facebook', 'google', or 'apple', social_id and email are required.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1",
                    "imp": "Code 0 => Failure, Code 1 => Successfully registered"
                }
                    , {
                    "color": "teal",
                    "icon": "person",
                    "title": "2 : USER",
                    "name": "Login",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/login",
                    "mandatory": "login_type('simple', 'facebook', 'google', 'apple'), device_token, device_type, os_version, app_version, latitude, longitude, loginid (for simple login), password (for simple login), email (for social login), social_id (for social login)",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key",
                    "notes": "This API is used for user login. If login_type is 'simple', loginid and password are required. If login_type is 'facebook', 'google', or 'apple', social_id and email are required.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2 <br>4. HTTP_OK[200] - code : 3 <br>5. HTTP_OK[200] - code : 4",
                    "imp": "Code 0 => Failure, Code 1 => Successfully logged in, Code 2 => Account not approved, Code 3 => Account incomplete, Code 4 => OTP not verified"
                }
                    , {
                    "color": "blue",
                    "icon": "key",
                    "title": "3 : USER",
                    "name": "Verify OTP",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/verify",
                    "mandatory": "otp (4-digit), email (if verifying via email) OR mobile (if verifying via mobile)",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key",
                    "notes": "This API is used to verify OTP. Either email or mobile is required along with the OTP. If OTP is correct, the user’s verification step is updated.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2",
                    "imp": "Code 0 => OTP incorrect, Code 1 => OTP verified successfully, Code 2 => User not found"
                }
                    , {
                    "color": "orange",
                    "icon": "refresh",
                    "title": "4 : USER",
                    "name": "Resend OTP",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/resend",
                    "mandatory": "number (numeric, max length 16)",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key",
                    "notes": "This API is used to resend OTP. If the user exists, a new OTP is generated and either updated in the database or inserted as a new entry.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2 <br>4. HTTP_OK[200] - code : 3",
                    "imp": "Code 0 => User not found, Code 1 => OTP resent successfully, Code 2 => OTP update failed, Code 3 => OTP insert failed"
                }
                    , {
                    "color": "red",
                    "icon": "logout",
                    "title": "5 : USER",
                    "name": "Logout",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/logout",
                    "mandatory": "token (required for authentication)",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API is used for user logout. A valid token must be provided; otherwise, it will return a 401 Unauthorized error. The device information is cleared upon successful logout.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1",
                    "imp": "Code 0 => Failure, Code 1 => Successfully logged out"
                }
                    , {
                    "color": "blue",
                    "icon": "key",
                    "title": "6 : USER",
                    "name": "Forget Password",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/forget",
                    "mandatory": "otp (4-digit required), email or mobile (at least one is required)",
                    "optional": "email, mobile",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key",
                    "notes": "This API allows users to reset their password using either their registered email or mobile number along with a valid OTP. If neither email nor mobile is provided, the request will be rejected. A valid OTP is required to proceed.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1",
                    "imp": "Code 0 => Failure, Code 1 => Password reset successful"
                }
                    , {
                    "color": "orange",
                    "icon": "lock",
                    "title": "8 : USER",
                    "name": "Change Password",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/change",
                    "mandatory": "token (required for authentication), password (new password, min 6 characters), oldpass (current password, min 6 characters)",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API is used to change the user's password. A valid token must be provided. The old password must match the existing password. If the new password is the same as the old password, the request will be rejected.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1",
                    "imp": "Code 0 => Failure, Code 1 => Password changed successfully"
                }
                    , {
                    "color": "blue",
                    "icon": "flag",
                    "title": "9 : USER",
                    "name": "Get Goals",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/getgoals",
                    "mandatory": "",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API is used to retrieve the list of goals. Only active and non-deleted goals will be returned.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1",
                    "imp": "Code 0 => No data found, Code 1 => Goals retrieved successfully"
                }
                    , {
                    "color": "green",
                    "icon": "message",
                    "title": "10 : USER",
                    "name": "Insert Contact",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/contact",
                    "mandatory": "first_name, last_name, email, subject, description",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API is used to insert a new contact request. All fields are required, and missing any will result in a request error.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1",
                    "imp": "Code 0 => Operation failed, Code 1 => Contact inserted successfully"
                }
                    , {
                    "color": "blue",
                    "icon": "map",
                    "title": "11 : USER",
                    "name": "Insert Address",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/add",
                    "mandatory": "area, house_no, road, latitude, longitude, type, user_id",
                    "optional": "block, delivery_info",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API is used to add a new address. The type must be either 'home' or 'office'. If the location is more than 100 km away, it will be rejected.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1",
                    "imp": "Code 0 => Operation failed or out of service area, Code 1 => Address added successfully"
                }
                    , {
                    "color": "orange",
                    "icon": "notifications",
                    "title": "12 : USER",
                    "name": "Get Notifications",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/notify",
                    "mandatory": "user_id",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API retrieves active notifications for a user. Notifications include an icon URL concatenated from a predefined base path.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2",
                    "imp": "Code 0 => Operation failed, Code 1 => Notifications retrieved successfully, Code 2 => No notifications found"
                }, {
                    "color": "green",
                    "icon": "restaurant_menu",
                    "title": "13 : USER",
                    "name": "Get Menu Details",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/getmenu",
                    "mandatory": "menuId",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API fetches menu details based on the provided menu ID. The image URL is concatenated from a predefined base path.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2",
                    "imp": "Code 0 => Operation failed, Code 1 => Menu details retrieved successfully, Code 2 => No menu found"
                }, {
                    "color": "blue",
                    "icon": "shopping_cart",
                    "title": "14 : USER",
                    "name": "Place Order",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/placeorder",
                    "mandatory": "add_id, menu_items, week_no, order_date",
                    "optional": "note",
                    "is_header": "YES",
                    "is_push": "YES",
                    "header": "api-key, token",
                    "notes": "This API allows a user to place an order by selecting menu items. It validates the order details, checks subscription status, and ensures meal timing constraints before confirming the order.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2",
                    "imp": "Code 0 => Operation failed, Code 1 => Order placed successfully, Code 2 => Missing or incorrect parameters"
                }, {
                    "color": "green",
                    "icon": "restaurant_menu",
                    "title": "15 : USER",
                    "name": "Get User Menu",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/menu",
                    "mandatory": "day_time",
                    "optional": "limit, offset",
                    "is_header": "YES",
                    "is_push": "YES",
                    "header": "api-key, token",
                    "notes": "This API fetches the menu for a user based on the specified meal time (Breakfast, Lunch, Dinner). It also retrieves the user details and active addresses.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2",
                    "imp": "Code 0 => Operation failed, Code 1 => Menu retrieved successfully, Code 2 => Missing or incorrect parameters"
                },
                {
                    "color": "blue",
                    "icon": "info",
                    "title": "16 : USER",
                    "name": "Get App Details",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/appdetails",
                    "mandatory": "",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "YES",
                    "header": "api-key, token",
                    "notes": "This API fetches application details that are active and not deleted.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2",
                    "imp": "Code 0 => Operation failed, Code 1 => App details retrieved successfully, Code 2 => No data found"
                },
                {
                    "color": "green",
                    "icon": "shopping_cart",
                    "title": "17 : USER",
                    "name": "Get User Orders",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/user/getorder",
                    "mandatory": "week_no",
                    "optional": "",
                    "is_header": "YES",
                    "is_push": "YES",
                    "header": "api-key, token",
                    "notes": "This API fetches user orders for a given week number.",
                    "status": "<br>1. HTTP_OK[200] - code : 0 <br>2. HTTP_OK[200] - code : 1 <br>3. HTTP_OK[200] - code : 2",
                    "imp": "Code 0 => Operation failed, Code 1 => Orders retrieved successfully, Code 2 => No orders found"
                },
                {
                    "color": "green",
                    "icon": "dashboard",
                    "title": "01 : ADMIN",
                    "name": "Admin Dashboard",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/admindash",
                    "mandatory": "None",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API fetches dashboard statistics for the admin, including user count, order status, and meal counts. It aggregates data from multiple tables to provide a comprehensive overview.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => Dashboard data retrieved successfully, Code 0 => Dashboard fetch error"
                },
                {
                    "color": "purple",
                    "icon": "group",
                    "title": "02 : ADMIN",
                    "name": "Get Users List",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/getuser",
                    "mandatory": "None",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API retrieves the list of all users from the database, ordered by their ID in descending order. It provides details such as user information and subscription status.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => Users retrieved successfully, Code 0 => Database error or failed to retrieve users"
                },
                {
                    "color": "orange",
                    "icon": "restaurant_menu",
                    "title": "03 : ADMIN",
                    "name": "Get Meals List",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/getmeal",
                    "mandatory": "None",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API retrieves the list of all available meals from the database, ordered by their ID in descending order. It provides details such as meal name, type, and availability.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => Meals retrieved successfully, Code 0 => Database error or failed to retrieve meals"
                },
                {
                    "color": "purple",
                    "icon": "receipt_long",
                    "title": "04 : ADMIN",
                    "name": "Get Orders List",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/getorder",
                    "mandatory": "None",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API retrieves the list of all orders from the database, ordered by their ID in descending order. It includes details like order status, user information, and meal details.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => Orders retrieved successfully, Code 0 => Database error or failed to retrieve orders"
                },
                {
                    "color": "red",
                    "icon": "person_remove",
                    "title": "05 : ADMIN",
                    "name": "Delete User",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/deleteuser",
                    "mandatory": "user_id",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API marks a user as deleted in the system by updating the 'is_deleted' flag. It ensures that the user ID is provided before proceeding.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_BAD_REQUEST[400] - code : 0 <br>3. HTTP_NOT_FOUND[404] - code : 2 <br>4. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => User deleted successfully, Code 0 => Missing user ID or database error, Code 2 => User not found"
                },
                {
                    "color": "orange",
                    "icon": "block",
                    "title": "06 : ADMIN",
                    "name": "Deactivate User",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/blockuser",
                    "mandatory": "user_id",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API deactivates a user by setting the 'is_active' flag to 0. It ensures that a valid user ID is provided before proceeding.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_BAD_REQUEST[400] - code : 0 <br>3. HTTP_NOT_FOUND[404] - code : 2 <br>4. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => User deactivated successfully, Code 0 => Missing user ID or database error, Code 2 => User not found"
                },
                {
                    "color": "green",
                    "icon": "person_add",
                    "title": "10 : ADMIN",
                    "name": "Activate User",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/activeuser",
                    "mandatory": "user_id",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API activates a user by setting 'is_active' to 1. The user ID must be valid and exist in the database.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_BAD_REQUEST[400] - code : 0 <br>3. HTTP_NOT_FOUND[404] - code : 2 <br>4. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => User activated successfully, Code 0 => Missing User ID or database error, Code 2 => User not found"
                },

                {
                    "color": "green",
                    "icon": "add",
                    "title": "07 : ADMIN",
                    "name": "Add Menu Item",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/addmenu",
                    "mandatory": "name, kcal, carbs, protein, fat, description, ingredients, img, day_time",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API adds a new menu item to the database. All fields are required, and 'day_time' must be one of ['Breakfast', 'Lunch', 'Dinner'].",
                    "status": "<br>1. HTTP_CREATED[201] - code : 1 <br>2. HTTP_BAD_REQUEST[400] - code : 0 <br>3. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => Menu item added successfully, Code 0 => Missing fields, invalid 'day_time', or database error"
                },
                {
                    "color": "blue",
                    "icon": "edit",
                    "title": "08 : ADMIN",
                    "name": "Update Menu Item",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/updatemenu",
                    "mandatory": "id, name, kcal, carbs, protein, fat, description, ingredients, img, day_time",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API updates an existing menu item in the database. The 'day_time' must be one of ['Breakfast', 'Lunch', 'Dinner']. The menu item must not be deleted.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_BAD_REQUEST[400] - code : 0 <br>3. HTTP_NOT_FOUND[404] - code : 2 <br>4. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => Menu item updated successfully, Code 0 => Missing fields or database error, Code 2 => Menu item not found or already deleted"
                },
                {
                    "color": "red",
                    "icon": "remove",
                    "title": "09 : ADMIN",
                    "name": "Delete Menu Item",
                    "meth": "POST",
                    "link": "<%= globals.base_url %>/v1/admin/deletemenu",
                    "mandatory": "id",
                    "optional": "None",
                    "is_header": "YES",
                    "is_push": "NO",
                    "header": "api-key, token",
                    "notes": "This API performs a soft delete on a menu item by setting 'is_deleted' to 1. The menu item must not already be deleted.",
                    "status": "<br>1. HTTP_OK[200] - code : 1 <br>2. HTTP_BAD_REQUEST[400] - code : 0 <br>3. HTTP_NOT_FOUND[404] - code : 2 <br>4. HTTP_INTERNAL_SERVER_ERROR[500] - code : 0",
                    "imp": "Code 1 => Menu item deleted successfully (soft delete), Code 0 => Missing Menu ID or database error, Code 2 => Menu item not found or already deleted"
                }







                ]
            })
        });
    </script>
</body>

</html>